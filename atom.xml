<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yi&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-30T12:14:03.992Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yi Tao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/manual/hello-world/"/>
    <id>http://yoursite.com/manual/hello-world/</id>
    <published>2019-05-30T12:14:04.037Z</published>
    <updated>2019-05-30T12:14:03.992Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="manual" scheme="http://yoursite.com/categories/manual/"/>
    
    
      <category term="web front end" scheme="http://yoursite.com/tags/web-front-end/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>最大似然求解k分类GDA模型</title>
    <link href="http://yoursite.com/academic/%E6%9C%80%E5%A4%A7%E4%BC%BC%E7%84%B6%E6%B1%82%E8%A7%A3k%E5%88%86%E7%B1%BBGDA%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/academic/最大似然求解k分类GDA模型/</id>
    <published>2019-03-26T09:26:56.000Z</published>
    <updated>2019-06-01T03:57:39.073Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>GDA</strong>: <strong>G</strong>aussian <strong>D</strong>iscriminant <strong>A</strong>nalysis 高斯判别分析<br><strong>MLE</strong>: <strong>M</strong>aximum <strong>L</strong>ikelihood <strong>E</strong>stimate 最大似然估计</p></blockquote><a id="more"></a><h3 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h3><p>1）假设目标变量$y\in\{0,\cdots,k-1\}$服从$k$项式分布$(\phi_{s}, s = 1,\cdots,k-1)$：</p><script type="math/tex; mode=display">\begin{eqnarray} p(y; \phi_{s}, s = 1,\cdots,k-1) = \prod_{s=0}^{k}\phi_{s}^{ \mathbf{1} \{ y = s \} }  = (1 - \sum_{s=1}^{k-1} \phi_{s})^{1 - \sum_{s=1}^{k-1} \mathbf{1} \{ y = s \} } \cdot \prod_{s=1}^{k-1}\phi_{s}^{ \mathbf{1} \{ y = s \} } \end{eqnarray}</script><p>其中$\mathbf{1} \{ \cdot \}$是<strong>指示函数</strong>，满足<script type="math/tex">\mathbf{1} \{ \text{True} \} = 1, \mathbf{1} \{ \text{False} \} = 0</script>。<br>2）假设特征向量对于不同类别均满足Gauss分布，并且有共同的协方差矩阵$\Sigma$：<script type="math/tex">\quad \vec{x}|y = s \ \sim N(\vec{\mu}_{s}, \Sigma), \quad s=0, 1, \cdots, k-1</script> <script type="math/tex">p(\vec{x}|y = s) = \frac{1}{(2\pi)^{\frac{n}{2}}|\Sigma|^{\frac{1}{2}}}\exp{[-\frac{1}{2}(\vec{x}-\vec{\mu}_{s})^{T}\Sigma^{-1}(\vec{x}-\vec{\mu}_{s})]}, \quad s=0, 1, \cdots, k-1</script><br>全部模型参数：$\phi_{s}$，$ \vec{\mu}_{s_{a}}$，$\Sigma$，$s = 1,\cdots,k-1$，$s_{a} = 0,\cdots,k-1$</p><h3 id="对数似然函数"><a href="#对数似然函数" class="headerlink" title="对数似然函数"></a>对数似然函数</h3><script type="math/tex; mode=display">\begin{eqnarray} & l(\phi_{s}, \vec{\mu}_{s_{a}}, \Sigma, s = 1,\cdots,k-1, s_{a} = 0,\cdots,k-1) \qquad\qquad\qquad \qquad\qquad\qquad \\ =& \log{\prod_{i=1}^{m} p(\vec{x}^{(i)}, y^{(i)}; \phi_{s}, \vec{\mu}_{s_{a}}, \Sigma, s = 1,\cdots,k-1, s_{a} = 0,\cdots,k-1 )} \qquad\qquad\qquad \quad\ \ \\ =& \log{\prod_{i=1}^{m} p(\vec{x}^{(i)} | y^{(i)}; \vec{\mu}_{s_{a}}, \Sigma, s_{a} = 0,\cdots,k-1 ) p(y^{(i)}; \phi_{s}, s = 1,\cdots,k-1 )} \qquad\qquad\quad \\ =& \sum_{i=1}^{m} \log{p(\vec{x}^{(i)} | y^{(i)}; \vec{\mu}_{s_{a}}, \Sigma, s_{a} = 0,\cdots,k-1 )} + \sum_{i=1}^{m} \log{p(y^{(i)}; \phi_{s}, s = 1,\cdots,k-1 )} \quad\ \\ =& \sum_{i=1}^{m} \log{\prod_{s_{a}=0}^{k-1} p(\vec{x}^{(i)}|y^{(i)}=j; \vec{\mu}_{s_{a}}, \Sigma)^{\mathbf{1} \{ y^{(i)} = s_{a} \} }} + \sum_{i=1}^{m} \log{p(y^{(i)}; \phi_{s}, s = 1,\cdots,k-1 )} \qquad \\ =& \sum_{i=1}^{m} \sum_{s_{a}=0}^{k-1} {\mathbf{1} \{ y^{(i)} = s_{a} \} } \log{ p(\vec{x}^{(i)} | y^{(i)}=j; \vec{\mu}_{s_{a}}, \Sigma)} + \sum_{i=1}^{m} \log{p(y^{(i)}; \phi_{s}, s = 1,\cdots,k-1 )} \end{eqnarray}</script><h3 id="最大化对数似然函数"><a href="#最大化对数似然函数" class="headerlink" title="最大化对数似然函数"></a>最大化对数似然函数</h3><p>1）对$\phi_{s}, s=1,\cdots,k-1$求偏导：</p><script type="math/tex; mode=display">\begin{eqnarray} & \frac{\partial l(\phi_{s}, \vec{\mu}_{s_{a}}, \Sigma, s = 1,\cdots,k-1, s_{a} = 0,\cdots,k-1) }{\partial \phi_{s}} \qquad\qquad\qquad \qquad\qquad \\ =& \frac{\partial }{\partial \phi_{s}}\big(\sum_{i=1}^{m} \log{p(y^{(i)}; \phi_{s}, s = 1,\cdots,k-1 )}\big) \qquad\qquad\qquad \qquad\qquad\qquad \qquad\quad \\ =& \frac{\partial }{\partial \phi_{s}} \big(\sum_{i=1}^{m} \log{[(1-\sum_{s'=1}^{k-1}\phi_{s'})^{1 - \sum_{s'=1}^{k-1} \mathbf{1} \{ y^{(i)} = {s'} \} } \cdot \prod_{s'=1}^{k-1}\phi_{s'}^{ \mathbf{1} \{ y = s' \} } ]}\big) \qquad\qquad\qquad \qquad\ \ \  \\ =& \frac{\partial }{\partial \phi_{s}} \big(\sum_{i=1}^m \big[ (1- \sum_{s'=1}^{k-1}\mathbf{1} \{ y^{(i)} = s' \}) \log{(1 - \sum_{s'=1}^{k-1}\phi_{s'})} + \sum_{s'=1}^{k-1} \mathbf{1} \{ y^{(i)} = s' \} \log{\phi_{s'}} \big] \big) \\ =& \sum_{i=1}^m \big[ (1- \sum_{s'=1}^{k-1} \mathbf{1} \{ y^{(i)} = s' \} )\cdot(1 - \sum_{s'=1}^{k-1}\phi_{s'})^{-1} \cdot (-1) + \mathbf{1} \{ y^{(i)} = s \}\cdot\phi_{s}^{-1} \big] \triangleq 0 \quad \\ & \Rightarrow\qquad (1 - \sum_{s'=1}^{k-1}\phi_{s'})^{-1} \cdot \sum_{i=1}^m (1- \sum_{s'=1}^{k-1} \mathbf{1} \{ y^{(i)} = s' \} ) = \phi_{s}^{-1} \cdot \sum_{i=1}^m \mathbf{1} \{ y^{(i)} = s \} \quad \\ & \frac{\phi_{s}}{\sum_{i=1}^m \mathbf{1} \{ y^{(i)} = s \}} = \frac{(1 - \sum_{s'=1}^{k-1}\phi_{s'})}{\sum_{i=1}^m (1 - \sum_{s'=1}^{k-1} \mathbf{1} \{ y^{(i)} = s' \} )} = \frac{\phi_{0}}{\sum_{i=1}^m \mathbf{1} \{ y^{(i)}=0 \}} \\ & \Rightarrow \qquad\qquad\quad \phi_{s} = \frac{\phi_{0}}{\sum_{i=1}^m \mathbf{1} \{ y^{(i)}=0 \}}\sum_{i=1}^m \mathbf{1} \{ y^{(i)} = s \} \qquad\qquad\qquad (\star) \qquad \end{eqnarray}</script><p>对$s$求和，</p><p>$(\star)$式左$=\sum_{s=0}^{k}\phi_{s}=1$</p><p>$(\star)$式右$= \frac{\phi_{0}}{\sum_{i=1}^m \mathbf{1} \{ y^{(i)}=0 \}}\sum_{s=0}^{k}\sum_{i=1}^{m}\mathbf{1} \{ y^{(i)} = s \} = m\cdot\frac{\phi_{0}}{\sum_{i=1}^m \mathbf{1} \{ y^{(i)}=0 \}}$</p><p>因此$\frac{\phi_{0}}{\sum_{i=1}^m \mathbf{1} \{ y^{(i)}=0 \}} = \frac{1}{m}$，带入$(\star)$式得到：</p><script type="math/tex; mode=display">\begin{eqnarray} \qquad \phi_{s} = \frac{1}{m} \sum_{i=1}^{m} \mathbf{1} \{ y^{(i)} = s \}, \quad  s=1,\cdots,k-1 \qquad \end{eqnarray}</script><p>2）对$\vec{\mu}_{s_{a}}, s_{a} = 0,1,\cdots, k-1$求偏导：</p><script type="math/tex; mode=display">\begin{eqnarray} & \frac{\partial l(\phi_{s}, \vec{\mu}_{s_{a}}, \Sigma, s = 1,\cdots,k-1, s_{a} = 0,\cdots,k-1) }{\partial \vec{\mu}_{s_{a}}} \qquad\qquad\qquad \qquad \\ =& \frac{\partial}{\partial \vec{\mu}_{s_{a}}} \big( \sum_{i=1}^{m} \mathbf{1} \{ y^{(i)} = s_{a} \} \log{p(\vec{x}^{(i)}|y^{(i)} = s_{a}; \vec{\mu}_{s_{a}}, \Sigma)} \big) \qquad\qquad\qquad \qquad\qquad\quad\ \\ =& \quad \frac{\partial}{\partial \vec{\mu}_{s_{a}}} \big( \sum_{i=1}^{m} \mathbf{1} \{ y^{(i)} = s_{a} \} \big[ \log{\frac{1}{(2\pi)^{\frac{n}{2}}|\Sigma|^{\frac{1}{2}}}} - \frac{1}{2}(\vec{x}^{(i)} - \vec{\mu}_{s_{a}})^{T}\Sigma^{-1}(\vec{x}^{(i)} - \vec{\mu}_{s_{a}}) \big] \big) \qquad \\ =& \sum_{i=1}^{m} \mathbf{1} \{ y^{(i)} = s_{a} \} \big(2\cdot(-\frac{1}{2})\cdot\Sigma^{-1}(\vec{x}^{(i)} - \vec{\mu}_{s_{a}})\cdot(-1) \big) \qquad\qquad\qquad \qquad\qquad\ \ \\ =& \sum_{i=1}^{m} \mathbf{1} \{ y^{(i)} = s_{a} \}\Sigma^{-1}(\vec{x}^{(i)} - \vec{\mu}_{s_{a}}) \triangleq 0 \qquad\qquad\qquad \qquad\qquad\qquad \qquad\qquad\ \ \ \\ & \Rightarrow \qquad \Sigma^{-1}\vec{\mu}_{s_{a}} = \frac{\sum_{i=1}^{m}\mathbf{1} \{ y^{(i)} = s_{a} \}\Sigma^{-1}\vec{x}^{(i)}}{\sum_{i=1}^{m}\mathbf{1} \{ y^{(i)} = s_{a} \} } \qquad\qquad\qquad \qquad\qquad\qquad \qquad \\ & \Rightarrow \qquad \vec{\mu}_{s_{a}} = \frac{\sum_{i=1}^{m}\mathbf{1} \{ y^{(i)} = s_{a} \} \vec{x}^{(i)}}{\sum_{i=1}^{m}\mathbf{1} \{ y^{(i)} = s_{a} \} }, \quad  s_{a} = 0,1,\cdots, k-1 \qquad\qquad\qquad \qquad \end{eqnarray}</script><p>其中分母表示$y^{(i)}$取值为$s$的样本数量，分子表示$y^{(i)}$取值为$s$的样本的$\vec{x}$之和，总体表示这一取值情况的$\vec{x}$的平均值，与预期结果相符。<br>3）对$ \Sigma $求偏导：</p><script type="math/tex; mode=display">\begin{eqnarray} & \frac{\partial l(\phi_{s}, \vec{\mu}_{s_{a}}, \Sigma, s = 1,\cdots,k-1, s_{a} = 0,\cdots,k-1)}{\partial \Sigma} \qquad\qquad\qquad \qquad\qquad \\ =& \frac{\partial}{\partial\Sigma} \big[\sum_{i=1}^{m} \sum_{s_{a}=0}^{k-1} \mathbf{1}\{ y^{(i)}= s_{a} \} \log{ p(\vec{x}^{(i)} | y^{(i)} = s_{a}; \vec{\mu}_{s_{a}}, \Sigma)}\big] \qquad\qquad\qquad \qquad\qquad\ \\ =& \frac{\partial }{\partial \Sigma} \big[ \sum_{i=1}^{m} \sum_{s_{a}=0}^{k-1} \mathbf{1} \{ y^{(i)} = s_{a} \}\big( \log{\frac{1}{ (2\pi)^{\frac{n}{2}} |\Sigma|^{\frac{1}{2}} } - \frac{1}{2}(\vec{x}^{(i)} - \vec{\mu}_{s_{a}})^{T}\Sigma^{-1}(\vec{x}^{(i)} - \vec{\mu}_{s_{a}})} \big) \big] \\ =& -\frac{m}{2} \frac{\partial\log{|\Sigma|}}{\partial\Sigma} -\frac{1}{2} \frac{\partial}{\partial\Sigma} \sum_{i=1}^{m} \sum_{s_{a}=0}^{k-1} \mathbf{1} \{ y^{(i)} = s_{a} \} (\vec{x}^{(i)} - \vec{\mu}_{s_{a}})^{T}\Sigma^{-1}(\vec{x}^{(i)} - \vec{\mu}_{s_{a}}) \qquad\ \ \\ =& -\frac{m}{2}|\Sigma|^{-1} \frac{\partial|\Sigma|}{\partial\Sigma} -\frac{1}{2} \sum_{i=1}^{m} \sum_{s_{a}=0}^{k-1} \big[ \mathbf{1} \{ y^{(i)} = s_{a} \} (\vec{x}^{(i)} - \vec{\mu}_{s})(\vec{x}^{(i)} - \vec{\mu}_{s_{a}})^{T} \big] \frac{\partial\Sigma^{-1}}{\partial\Sigma} \qquad \\ =& -\frac{m}{2}\Sigma^{-1} + \frac{1}{2} \sum_{i=1}^{m} \sum_{s_{a}=0}^{k-1} \big[ \mathbf{1} \{ y^{(i)} = s_{a} \} (\vec{x}^{(i)} - \vec{\mu}_{s_{a}})(\vec{x}^{(i)} - \vec{\mu}_{s_{a}})^{T} \big]\Sigma^{-2} \triangleq 0 \qquad\qquad  \\ & \Rightarrow \quad \Sigma = \frac{1}{m}\sum_{i=1}^{m} \sum_{s_{a}=0}^{k-1} \big[ \mathbf{1} \{ y^{(i)} = s_{a} \} (\vec{x}^{(i)} - \vec{\mu}_{s_{a}})(\vec{x}^{(i)} - \vec{\mu}_{s_{a}})^{T} \big] \qquad\qquad\qquad \end{eqnarray}</script><p>可以发现这个结果也是符合预期的。</p><h3 id="最佳拟合参数总结"><a href="#最佳拟合参数总结" class="headerlink" title="最佳拟合参数总结"></a>最佳拟合参数总结</h3><script type="math/tex; mode=display">\begin{eqnarray} \phi_{s} =& \frac{1}{m} \sum_{i=1}^{m} \mathbf{1} \{ y^{(i)} = s \}, \quad s=1,\cdots,k-1 \qquad\qquad \\ \vec{\mu}_{s_{a}} =& \frac{\sum_{i=1}^{m}\mathbf{1} \{ y^{(i)} = s_{a} \} \vec{x}^{(i)}}{\sum_{i=1}^{m}\mathbf{1} \{ y^{(i)} = s_{a} \} }, \quad s_{a}=0,\cdots,k-1 \qquad \\ \Sigma =& \frac{1}{m}\sum_{i=1}^{m} \sum_{s_{a}=0}^{k-1} \big[ \mathbf{1} \{ y^{(i)} = s_{a} \} (\vec{x}^{(i)} - \vec{\mu}_{s_{a}})(\vec{x}^{(i)} - \vec{\mu}_{s_{a}})^{T} \big] \end{eqnarray}</script>]]></content>
    
    <summary type="html">
    
      利用最大似然法得到高斯判别分析模型的最佳拟合参数
    
    </summary>
    
      <category term="academic" scheme="http://yoursite.com/categories/academic/"/>
    
    
      <category term="theory" scheme="http://yoursite.com/tags/theory/"/>
    
      <category term="algorithm" scheme="http://yoursite.com/tags/algorithm/"/>
    
      <category term="machine learning" scheme="http://yoursite.com/tags/machine-learning/"/>
    
      <category term="GDA" scheme="http://yoursite.com/tags/GDA/"/>
    
      <category term="MLE" scheme="http://yoursite.com/tags/MLE/"/>
    
  </entry>
  
  <entry>
    <title>云主机配置微信公众号后台全记录</title>
    <link href="http://yoursite.com/tutorial/%E4%BA%91%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%90%8E%E5%8F%B0%E5%85%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/tutorial/云主机配置微信公众号后台全记录/</id>
    <published>2019-02-19T07:58:27.000Z</published>
    <updated>2019-05-31T16:58:30.548Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>CentOS7/Python3/Flask/Nginx/Gunicorn/WeRoBot/Systemd</p></blockquote><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在天秤座的纠结性格反复权衡后，最终我还是拥有了自己的第一个个人云主机。我这里选择的是“阿里云学生专享服务器”，在做学生的最后一年有幸享受到9.5/月的优惠价格，还是要感谢阿里爸爸的关爱！选择阿里云的原因没有什么可供参考的，主要是因为我比较信赖阿里系的产品。</p><p>系统我选择了比较稳定的CentOS 7.3 64位。以下是一些关键参数信息：</p><div class="table-container"><table><thead><tr><th style="text-align:center">操作系统</th><th style="text-align:center">CPU</th><th style="text-align:center">内存</th><th style="text-align:center">带宽</th></tr></thead><tbody><tr><td style="text-align:center">CentOS 7.3 64位</td><td style="text-align:center">1核</td><td style="text-align:center">2GB</td><td style="text-align:center">1Mbps</td></tr></tbody></table></div><p>以下我将详细记录我这次云主机的配置过程，一来是熟悉一下CentOS系统，二来是试用云主机。相信这次经历会让我学到很多东西。</p><h1 id="阅读指南"><a href="#阅读指南" class="headerlink" title="阅读指南"></a>阅读指南</h1><h2 id="预备资源"><a href="#预备资源" class="headerlink" title="预备资源"></a>预备资源</h2><ol><li>拥有一台CentOS系统的服务器或计算机</li><li>良好的网络</li><li>至少有一种已会使用的编辑器（本文中使用<code>vim</code>）<h2 id="预备技能"><a href="#预备技能" class="headerlink" title="预备技能"></a>预备技能</h2></li><li>基本的Linux系统操作能力</li><li>基本的Python3编程技能</li><li>对“管理员权限”、“虚拟环境”、“包管理”、“网络代理”等概念有基本认识</li></ol><h1 id="配置过程-1-6"><a href="#配置过程-1-6" class="headerlink" title="配置过程$^{[1-6]}$"></a>配置过程<a href="#参考资料">$^{[1-6]}$</a></h1><h2 id="0-创建新用户"><a href="#0-创建新用户" class="headerlink" title="0. 创建新用户"></a>0. 创建新用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ adduser &lt;user_name&gt;                        <span class="comment"># 创建新用户&lt;user_name&gt;</span></span><br><span class="line">$ passwd &lt;user_name&gt;                         <span class="comment"># 设置新用户的密码</span></span><br><span class="line">$ usermod -aG wheel &lt;user_name&gt;              <span class="comment"># 使&lt;user_name&gt;获得sudo权限</span></span><br><span class="line">$ su &lt;user_name&gt;                             <span class="comment"># 切换至用户&lt;user_name&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>(1) “<code>&lt;user_name&gt;</code>”替换成你实际的项目名称；<br>(2) 你会发现，非<code>root</code>用户的主目录是<code>/home</code>的子目录。<br>(3) 设置密码的步骤<strong>是</strong>必须的。</p><h2 id="1-更新包管理器yum及安装相关工具包"><a href="#1-更新包管理器yum及安装相关工具包" class="headerlink" title="1. 更新包管理器yum及安装相关工具包"></a>1. 更新包管理器<code>yum</code>及安装相关工具包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum update                            <span class="comment"># 更新yum</span></span><br><span class="line">$ sudo yum install yum-utils                 <span class="comment"># 安装yum-utils</span></span><br><span class="line">$ sudo yum groupinstall development          <span class="comment"># 一并安装一系列常用包</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>(1) 由于是个人使用，在<code>root</code>账号下，以下的<code>sudo</code>命令其实都是不必需的；<br>(2) <code>yum</code>是类似于<code>Ubuntu</code>下<code>apt-get</code>般的存在；<br>(3) 尽管CentOS下shell的命令提示符为<code>#</code>，但为了此处不与Markdown的记号冲突，我会始终使用<code>$</code>。<br><strong>说明：此步骤无报错。每个命令运行成功输出内容均以“Complete!”结尾，中间遇到的确认一律yes(输入<code>y</code>)，当然你也可以选择对于每一个<code>yum</code>命令添加<code>-y</code>参数，就会一路yes自动安装下去了，下同。</strong></p><h2 id="2-安装Python3"><a href="#2-安装Python3" class="headerlink" title="2. 安装Python3"></a>2. 安装Python3</h2><h3 id="2-1-基础安装"><a href="#2-1-基础安装" class="headerlink" title="2.1 基础安装"></a>2.1 基础安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install https://centos7.iuscommunity.org/ius-release.rpm  <span class="comment"># 安装IUM repo</span></span><br><span class="line">$ sudo yum install python36u                 <span class="comment"># 安装Python3.6</span></span><br><span class="line">$ sudo yum install python36u-pip             <span class="comment"># 安装pip包管理</span></span><br><span class="line">$ sudo yum install python36u-devel           <span class="comment"># 安装其他相关开发包</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>(1) 执行<code>python3.6 -V</code> 在2019.2.19的结果是Python 3.6.7；<br>(2) 此时如果使用<code>which python3</code>或<code>which pip3</code>均会报错，因为它们的实际名字分别是<code>python3.6</code>和<code>pip3.6</code>；<br>(3) 如果你是用其他方式安装的Python3，那么这里你可能会遇到文件冲突（尤其是当Python3的版本不一致的时候）；<br>(4) 不推荐源码编译安装（除非你是娴熟的老司机）。<br><strong>说明：此步骤无报错。</strong></p><h3 id="2-2-软-链接python3和pip3"><a href="#2-2-软-链接python3和pip3" class="headerlink" title="2.2 (软)链接python3和pip3"></a>2.2 (软)链接<code>python3</code>和<code>pip3</code></h3><p>好了，对于在MacOS已经习惯使用<code>python3</code>和<code>pip3</code>这样的命令的我们来说，每次都要写<code>3.6</code>未免也太臃肿了（简单估算一下是要多28.6%的敲击频率），而且一些代码也需要额外做调整，费时费力。我们可以使用<code>ln</code>来创建(软)链接：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s /usr/bin/python3.6 /usr/bin/python3  <span class="comment"># (软)链接python3</span></span><br><span class="line">$ ln -s /usr/bin/pip3.6 /usr/bin/pip3        <span class="comment"># (软)链接pip3</span></span><br></pre></td></tr></table></figure></p><p>这样我们就可以自由地使用<code>python3</code>和<code>pip3</code>了。<br><strong>注意：</strong><br>(1) 关于<code>ln</code>命令：在不同的目录，用到相同的文件时，不需要在每一个目录下都放一个必须相同的文件，只须在某个固定的目录，放上该文件，然后在其它的目录下用<code>ln</code>命令链接它就可以，不必重复地占用磁盘空间。这里只是把它用成类似<code>alias</code>的功能。<br>(2) 随手可以把<code>pip</code>更新到最新版本（不过这里其实不需要完成更新，因为在虚拟环境中如希望使用最新版本<code>pip</code>，需要在虚拟环境中更新）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip3 install --upgrade pip                 <span class="comment"># 将pip更新至最新</span></span><br></pre></td></tr></table></figure></p><h2 id="3-创建虚拟环境"><a href="#3-创建虚拟环境" class="headerlink" title="3. 创建虚拟环境"></a>3. 创建虚拟环境</h2><p>创建虚拟环境的目的是保证业务独立，各依赖库版本控制不受其他项目影响。<br>Python3中内置了<code>venv</code>模块来创建虚拟环境。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir &lt;project_name&gt; &amp;&amp; <span class="built_in">cd</span> &lt;project_name&gt;  <span class="comment"># 创建并进入&lt;project_name&gt;目录</span></span><br><span class="line">$ python3 -m venv &lt;venv_name&gt;                <span class="comment"># 创建名为&lt;venv_name&gt;的虚拟环境</span></span><br></pre></td></tr></table></figure></p><p><strong>注意：</strong><br>(1) “<code>&lt;project_name&gt;</code>”替换成你实际的项目名称，“<code>&lt;venv_name&gt;</code>”替换成你实际的虚拟环境名称；<br>(2) 激活虚拟环境见4.2小节，（在激活状态下）退出虚拟环境使用命令<code>deactivate</code>；<br>(3) 有两种方案，第一种就是像这里给出的将虚拟环境相关文件的目录设在所需项目中（项目导向）；第二种你可以在主目录下创建目录<code>venvs</code>，然后将所有的虚拟目录创建在其下（文件管理导向）。<br>(4) 以下内容如无特别说明，执行的系统命令都在<code>~/&lt;project_name&gt;/</code>目录中。</p><h2 id="4-搭建服务器"><a href="#4-搭建服务器" class="headerlink" title="4. 搭建服务器"></a>4. 搭建服务器</h2><h3 id="4-1-安装服务器配置所需的工具"><a href="#4-1-安装服务器配置所需的工具" class="headerlink" title="4.1 安装服务器配置所需的工具"></a>4.1 安装服务器配置所需的工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install gcc uwsgi nginx</span><br></pre></td></tr></table></figure><h3 id="4-2-在虚拟环境中安装Python程序依赖的第三方库"><a href="#4-2-在虚拟环境中安装Python程序依赖的第三方库" class="headerlink" title="4.2 在虚拟环境中安装Python程序依赖的第三方库"></a>4.2 在虚拟环境中安装Python程序依赖的第三方库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/&lt;project_name&gt;/&lt;venv_name&gt;/bin/activate   <span class="comment"># 激活虚拟环境&lt;venv_name&gt;</span></span><br><span class="line">$ pip3 install requests beautifulsoup4 lxml flask gunicorn werobot cryptography</span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>(1) 以上Pypi安装的库中：<br><code>requests</code>，<code>beautifulsoup4</code>和<code>lxml</code>：爬虫业务相关（非必需），<br><code>flask</code>：所采用的Web框架（非必需），<br><code>gunicorn</code>：是一个高性能的Python WSGI UNIX HTTP服务器（必需），<br><code>werobot</code>：此处开发微信公众号的核心库（必需），<br><code>cryptography</code>：当你在微信后台基本配置选择的消息传输方式是“兼容模式”或“安全模式”时，WeRoBot所需要的密码库（推荐，非必需）。<br>(2) 似乎CentOS7系统自带了<code>nginx</code>，因为后来我<code>which nginx</code>得到的是<code>/usr/sbin/nginx</code>，而其他通过<code>yum</code>安装的命令工具都在<code>/usr/bin/</code>下。<br><strong>说明：此步骤无报错。<code>cryptography</code>库是我后来调试时根据异常信息后才知道要安装的。另外，假如你没有将<code>pip</code>更新到最新，会看到提示信息：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">You are using pip version 9.0.1, however version 19.0.2 is available.</span><br><span class="line">You should consider upgrading via the &apos;pip install --upgrade pip&apos; command.</span><br></pre></td></tr></table></figure></p><p><strong>强迫症都会更新的。</strong></p><h3 id="4-3-配置Nginx反向代理"><a href="#4-3-配置Nginx反向代理" class="headerlink" title="4.3 配置Nginx反向代理"></a>4.3 配置Nginx反向代理</h3><h4 id="4-3-1-创建项目的Nginx配置文件"><a href="#4-3-1-创建项目的Nginx配置文件" class="headerlink" title="4.3.1 创建项目的Nginx配置文件"></a>4.3.1 创建项目的Nginx配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/nginx/conf.d/&lt;project_name&gt;.conf   <span class="comment"># 创建项目所需的nginx配置文件</span></span><br></pre></td></tr></table></figure><p>在所打开的空文件中完成监听及反向代理的配置（没有注释的部分我也还不太懂，按照Flask官网教程写的），<code>:wq</code>保存关闭。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> &lt;我的ECS公网ip&gt;;               <span class="comment"># 有域名的朋友这里填域名</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/access.log;    <span class="comment"># 设置正常通信日志</span></span><br><span class="line">    <span class="attribute">error_log</span>  /var/log/nginx/error.log;      <span class="comment"># 设置报错日志</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> /&lt;project_name&gt;/ &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span>         http://127.0.0.1:8000; <span class="comment"># 反向代理Gunicorn本地的服务地址</span></span><br><span class="line">        <span class="attribute">proxy_redirect</span>     <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Real-IP           <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   Host                <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Forwarded-For     <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Forwarded-Proto   <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="4-3-2-启动Nginx服务"><a href="#4-3-2-启动Nginx服务" class="headerlink" title="4.3.2 启动Nginx服务"></a>4.3.2 启动Nginx服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start nginx</span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><p>每当你修改任意的Nginx配置文件后，都需要重启<code>nginx</code>来使配置生效：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart nginx</span><br></pre></td></tr></table></figure></p><p><strong>注意：</strong><br>(1) “<code>&lt;project_name&gt;</code>”替换成你实际的项目名称，“&lt;我的ECS公网ip&gt;”替换成你的公网ip或外部域名；<br>(2) 查看Nginx状态使用命令<code>sudo systemctl status nginx</code>；要停止Nginx服务，使用<code>sudo service nginx stop</code>。<br><strong>说明：这个地方卡了我很长的时间，由于是第一次部署服务器和第一次开发微信公众号，甚至定位问题出现在这里都费了很多工夫。特别要注意配置文件中<code>server_name</code>和<code>location</code>这里，参看<a href="http://nginx.org/en/docs/http/server_names.html" target="_blank" rel="noopener">Nginx: Server names</a>，特别是当查看Nginx状态时遇到<code>suspicious symbol</code>的异常时。</strong><br>(3) [2019-05-20补充] 即使在<code>/etc/nginx/conf.d</code>中，也不要重复设置<code>server</code>，尤其是同一个ip，否则会造成地址冲突，导致服务启动失败。（这里的2条补充是由于我遇到了修改nginx后无法恢复公众号服务的问题）<br>(4) [2019-05-20补充] <code>sudo nginx -t</code>用来检查你的配置文件是否正确。每次更新nginx配置文件后，要在<code>restart</code>和<code>enable</code>前使配置重新加载<code>sudo nginx -s reload</code>。如果你做了以上这些仍然无法恢复你的项目，尝试去腾讯微信公众平台去<strong>“停用”</strong>并重新<strong>“启用”</strong>服务器配置。</p><h3 id="4-4-部署一个”Hello-World-”的Flask-WeRoBot项目"><a href="#4-4-部署一个”Hello-World-”的Flask-WeRoBot项目" class="headerlink" title="4.4 部署一个”Hello World!”的Flask-WeRoBot项目"></a>4.4 部署一个”Hello World!”的Flask-WeRoBot项目</h3><h4 id="4-4-1-创建一个robot-py，用来管理你的机器人（自动回复程序）"><a href="#4-4-1-创建一个robot-py，用来管理你的机器人（自动回复程序）" class="headerlink" title="4.4.1 创建一个robot.py，用来管理你的机器人（自动回复程序）"></a>4.4.1 创建一个<code>robot.py</code>，用来管理你的机器人（自动回复程序）</h4><figure class="highlight python"><figcaption><span>robot.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> werobot <span class="keyword">import</span> WeRoBot</span><br><span class="line"></span><br><span class="line">robot = WeRoBot(</span><br><span class="line">    token=<span class="string">'&lt;我的令牌&gt;'</span>,  </span><br><span class="line">    encoding_aes_key=<span class="string">'&lt;我的消息加解密密钥&gt;'</span>, </span><br><span class="line">    app_id=<span class="string">'&lt;我的开发者ID&gt;'</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="meta">@robot.handler</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(message)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong><code>token</code>和<code>encoding_aes_key</code>务必与微信公众平台设置的“<strong>令牌(Token)</strong>”和“<strong>消息加解密密钥(EncodingAESKey)</strong>”保持一致（前者是自定义的，后者是提交服务器设置时微信那边随机生成的）<br><strong>说明：在WeRobot的官方文档和很多网上博客资料的“Hello World”中没有强调<code>encoding_aes_key</code>参数，因为他们默认在微信公众平台设置选择的是“明文模式”。</strong></p><h4 id="4-4-2-创建一个app-py，作为主应用程序"><a href="#4-4-2-创建一个app-py，作为主应用程序" class="headerlink" title="4.4.2 创建一个app.py，作为主应用程序"></a>4.4.2 创建一个<code>app.py</code>，作为主应用程序</h4><figure class="highlight python"><figcaption><span>app.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> robot <span class="keyword">import</span> robot</span><br><span class="line"><span class="keyword">from</span> werobot.contrib.flask <span class="keyword">import</span> make_view</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.add_url_rule(rule=<span class="string">'/&lt;project_name&gt;/'</span>,        <span class="comment"># WeRoBot挂载地址</span></span><br><span class="line">                 endpoint=<span class="string">'werobot'</span>,             <span class="comment"># Flask的endpoint</span></span><br><span class="line">                 view_func=make_view(robot),</span><br><span class="line">                 methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p><strong>注意：</strong><code>rule</code>参数的值结尾处的<code>/</code>必须有，因为要同Nginx配置信息以及微信设置的URL保持一致。</p><h3 id="4-5-启动Gunicorn服务器"><a href="#4-5-启动Gunicorn服务器" class="headerlink" title="4.5 启动Gunicorn服务器"></a>4.5 启动Gunicorn服务器</h3><h4 id="4-5-1-尝试启动Gunicorn服务器"><a href="#4-5-1-尝试启动Gunicorn服务器" class="headerlink" title="4.5.1 尝试启动Gunicorn服务器"></a>4.5.1 尝试启动Gunicorn服务器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最简单的命令方式（默认绑定的是127.0.0.1:8000）</span></span><br><span class="line">$ gunicorn app:app</span><br><span class="line"><span class="comment"># 或者设置一些参数的方式</span></span><br><span class="line">$ gunicorn -w 3 -b 127.0.0.1:8000 app:app</span><br></pre></td></tr></table></figure><p>这时你的终端就会显示服务器的监听状态，类似于下面这样：<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">2019-02-28 12:13:54 +0800</span>] [<span class="number">16859</span>] [INFO] Starting gunicorn <span class="number">19.9</span><span class="number">.0</span></span><br><span class="line">[<span class="meta">2019-02-28 12:13:54 +0800</span>] [<span class="number">16859</span>] [INFO] Listening at: http:<span class="comment">//127.0.0.1:8000 (16859)</span></span><br><span class="line">[<span class="meta">2019-02-28 12:13:54 +0800</span>] [<span class="number">16859</span>] [INFO] Using worker: sync</span><br><span class="line">[<span class="meta">2019-02-28 12:13:54 +0800</span>] [<span class="number">16862</span>] [INFO] Booting worker with pid: <span class="number">16862</span></span><br><span class="line">[<span class="meta">2019-02-28 12:13:54 +0800</span>] [<span class="number">16863</span>] [INFO] Booting worker with pid: <span class="number">16863</span></span><br><span class="line">[<span class="meta">2019-02-28 12:13:54 +0800</span>] [<span class="number">16864</span>] [INFO] Booting worker with pid: <span class="number">16864</span></span><br></pre></td></tr></table></figure></p><p>然后打开网页浏览器，输入url：<code>http://&lt;我的ECS公网ip&gt;/&lt;project_name&gt;/</code>，如果你看到一个中心标题为“这是一个WeRoBot应用”的页面而非“404”、“502”这种错误页面，说明你的服务器启动成功了（Nginx反代理也设置正确了）。退出<code>Control + c</code>。</p><h4 id="4-5-2-创建WSGI入口文件"><a href="#4-5-2-创建WSGI入口文件" class="headerlink" title="4.5.2 创建WSGI入口文件"></a>4.5.2 创建WSGI入口文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim wsgi.py</span><br></pre></td></tr></table></figure><p>文件内容如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> app</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></p><p>这个文件存在的意义是业务逻辑分离。<br>现在启动Gunicorn服务器就变为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ gunicorn wsgi:app </span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">$ gunicorn -w 3 -b 127.0.0.1:8000 wsgi:app</span><br></pre></td></tr></table></figure></p><h2 id="5-完成微信公众平台设置"><a href="#5-完成微信公众平台设置" class="headerlink" title="5. 完成微信公众平台设置"></a>5. 完成微信公众平台设置</h2><p>这里默认你已经完成了微信公众号的申请。<br>登录微信公众平台后，在左侧下方找到 <strong>开发</strong> &gt;&gt; <strong>基本配置</strong> &gt;&gt; <strong>修改配置</strong>，然后填写服务器信息，根据本文的上下文约定，填写的内容应该符合这个格式：</p><div class="table-container"><table><thead><tr><th style="text-align:center">项目</th><th style="text-align:center">内容</th></tr></thead><tbody><tr><td style="text-align:center">URL</td><td style="text-align:center">http://&lt;我的ECS公网ip&gt;/<project_name>/</project_name></td></tr><tr><td style="text-align:center">Token</td><td style="text-align:center">&lt;我的令牌&gt;</td></tr><tr><td style="text-align:center">EncodingAESKey</td><td style="text-align:center">操作：选择随机生成</td></tr><tr><td style="text-align:center">消息加解密方式</td><td style="text-align:center">操作：选择安全(或明文/兼容)模式</td></tr></tbody></table></div><p>随后点击<strong>提交</strong>完成设置。<br><strong>注意：</strong>在点击<strong>提交</strong>前请确定服务器已启动。EncodingAESKey处的字符串对应上文中的“<strong>&lt;我的消息加解密密钥&gt;</strong>”</p><h2 id="6-创建Systemd-Unit-File"><a href="#6-创建Systemd-Unit-File" class="headerlink" title="6. 创建Systemd Unit File"></a>6. 创建Systemd Unit File</h2><p>这个是为了在CentOS系统重启后自动启动我们的Gunicorn服务器以恢复Flask项目，同时在后台守护Gunicorn运行的进程（也就是说即使你登出后依然保持运行状态）。我们只需要创建相应的服务文件(<code>.service</code>)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/systemd/system/&lt;project_name&gt;.service</span><br></pre></td></tr></table></figure></p><p>添加文件如下内容保存退出。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Gunicorn instance to serve &lt;project_name&gt;</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=&lt;user_name&gt;</span><br><span class="line">Group=nginx</span><br><span class="line">WorkingDirectory=/home/&lt;user_name&gt;/&lt;project_name&gt;</span><br><span class="line">Environment=&quot;PATH=/home/&lt;user_name&gt;/&lt;project_name&gt;/&lt;venv_name&gt;/bin&quot;</span><br><span class="line">ExecStart=/home/&lt;user_name&gt;/&lt;project_name&gt;/&lt;venv_name&gt;/bin/gunicorn --workers 3 --bind 127.0.0.1:8000 wsgi:app</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>接下来启动我们的<code>&lt;project_name&gt;</code>服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl daemon-reload             <span class="comment"># 使服务文件生效</span></span><br><span class="line">$ sudo systemctl start &lt;project_name&gt;      <span class="comment"># 启动&lt;project_name&gt;服务</span></span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> &lt;project_name&gt;     <span class="comment"># 使&lt;project_name&gt;服务可用</span></span><br></pre></td></tr></table></figure></p><p><strong>注意：</strong>查看状态使用命令<code>sudo systemctl status &lt;project_name&gt;</code>；停止服务使用<code>sudo service &lt;project_name&gt; stop</code>。<br><strong>说明：我们这里不采用其他文档或资料中提到的守护程序Supervisor，因为CentOS7自带的systemd足够强大易用，省去了安装新工具的麻烦（也节省了空间）。</strong></p><h2 id="7-测试"><a href="#7-测试" class="headerlink" title="7. 测试"></a>7. 测试</h2><p>进入公众号回复任意消息，如果一切顺利的话，你将收到文本消息“Hello World!”<br><strong>大功告成！</strong><br>后续就是移植旧功能，开发新功能，并且逐步迭代优化的过程了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>常言道，“生命在于折腾”，历经1周的探索尝试，包括到Github提issue寻求帮助，咨询阿里云的工程师，联系腾讯客服，搜索浏览上百个链接，终于成功将服务器跑起来，很开心！也完成了这篇记录，给自己留下一个见证，如果这篇文章能够帮助到你那就更好了！也请点个“喜欢”，让我知道探索技术的道路上并不孤独，也让我知道能帮你少走了弯路！完结撒花~</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[1] <a href="https://janikarhunen.fi/how-to-install-python-3-6-1-on-centos-7" target="_blank" rel="noopener">How-to install Python 3.6.1 on CentOS 7</a><br>[2] <a href="http://dormousehole.readthedocs.io/en/latest/" target="_blank" rel="noopener">Flask中文文档</a><br>[3] <a href="https://werobot.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">WeRoBot官方文档</a><br>[4] <a href="https://shanguangyu.com/articles/wechat-ECS/" target="_blank" rel="noopener">阿里云ECS搭建微信公众平台</a><br>[5] <a href="https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-centos-7" target="_blank" rel="noopener">How To Serve Flask Applications with Gunicorn and Nginx on CentOS 7</a><br>[6] <a href="https://bartsimons.me/gunicorn-as-a-systemd-service/" target="_blank" rel="noopener">Gunicorn as a SystemD service</a></p>]]></content>
    
    <summary type="html">
    
      详细记录配置微信公众号后台的各个步骤
    
    </summary>
    
      <category term="tutorial" scheme="http://yoursite.com/categories/tutorial/"/>
    
    
      <category term="web server" scheme="http://yoursite.com/tags/web-server/"/>
    
      <category term="python3" scheme="http://yoursite.com/tags/python3/"/>
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
      <category term="gunicorn" scheme="http://yoursite.com/tags/gunicorn/"/>
    
      <category term="WeRobot" scheme="http://yoursite.com/tags/WeRobot/"/>
    
      <category term="systemd" scheme="http://yoursite.com/tags/systemd/"/>
    
  </entry>
  
  <entry>
    <title>WIMP</title>
    <link href="http://yoursite.com/academic/WIMP/"/>
    <id>http://yoursite.com/academic/WIMP/</id>
    <published>2018-12-28T14:07:39.000Z</published>
    <updated>2019-06-01T08:21:26.121Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>关于WIMP的理论模型推导</p></blockquote><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>WIMP</strong>是弱相互作用大质量粒子(<strong>W</strong>eakly <strong>I</strong>nteracting <strong>M</strong>assive <strong>P</strong>article)的简称，它是目前最流行、最被看好的暗物质粒子候选者，也是宇宙学$\Lambda\text{CDM}$模型中的冷暗物质成分，具有稳定性、电磁中性、色中性和非相对论性。它的质量量级被估计在$10^2\text{GeV}/c^2$左右，而目前的粒子加速器仍没有能力达到这个能量尺度。</p><h2 id="早期宇宙与WIMP热遗迹"><a href="#早期宇宙与WIMP热遗迹" class="headerlink" title="早期宇宙与WIMP热遗迹"></a>早期宇宙与WIMP热遗迹</h2><p>尽管目前加速器对产生WIMP还无能为力，但是宇宙作为一个天然的巨型实验室，(根据大爆炸宇宙学模型)在早期是有足够高的能量来产生WIMPs。随着宇宙的膨胀降温，这个产生过程一直持续到温度能标低于WIMP的质量的时刻。由于暗物质一直存在至今，说明它在宇宙中是很稳定的（最轻的暗物质粒子没有进一步衰变成标准模型粒子），因而唯一能让它数量发生改变的过程就是暗物质粒子相互湮灭（当然这里已经<strong>假设WIMPs</strong>彼此之间<strong>可以发生湮灭</strong>）</p><script type="math/tex; mode=display">\begin{equation}\chi+\chi\rightarrow \text{SM}+\text{SM}\end{equation}</script><p>湮灭事例率$\Gamma$与湮灭截面$\sigma_{\text{ann}}$，相对运动速率$v$和WIMP数密度$n_\chi$相关:</p><script type="math/tex; mode=display">\begin{equation}\Gamma = \langle\sigma_{\text{ann}}v\rangle n_\chi\end{equation}</script><p>（假设在宇宙原初热浴时期WIMP与整个体系是热平衡的）这个湮灭过程会带来粒子数密度的变化，而描绘这个粒子数密度非平衡态过程的Boltzmann方程<a href="#ref_1">$^{[1]}$</a>为 </p><script type="math/tex; mode=display">\begin{equation}a^{-3}\frac{\text{d}(n_\chi a^3)}{\text{d}t} = \langle\sigma_{\text{ann}}v\rangle[(n^0_\chi)^2 - (n_\chi)^2]\end{equation}</script><p>其中$a$是宇宙尺度因子，上角标“$^0$”表示热平衡时的值，有的文献(例如<a href="#ref_2">[2]</a>)中也会将Boltzmann方程写成 </p><script type="math/tex; mode=display">\begin{equation}\frac{\text{d}n_\chi}{\text{d}t} + 3Hn_\chi = - \langle\sigma_{\text{ann}}v\rangle[(n_\chi)^2 - (n^0_\chi)^2]\end{equation}</script><p>其中$H$为Hubble常数。显见这两个表达式是完全等价的<a href="#appendix_1">$^1$</a>。</p><p>随着(早期)宇宙的继续膨胀，可以由上式看出$n_\chi$在不断变小，使得WIMP湮灭过程越来越难以进行，换言之暗物质粒子碰撞几率持续下降。直至当湮灭事例率达到宇宙膨胀速率水平的时候($\Gamma \simeq H$)，碰撞几率为$0$，这个过程被“冻结”了(thermal freeze-out)而产生了所谓<strong>热遗迹(thermal relic)</strong>，这之后WIMP的<strong>共动数密度</strong>(yield, or comoving number density)$Y_\chi = \cfrac{n_\chi}{s}$就近似为常数值<a href="#appendix_2">$^2$</a>了，暗物质粒子$\chi$从其他粒子组分中<strong>退耦</strong>，此时的温度称为冻结温度$T_f$。根据热力学，热平衡下各种类粒子数密度，能量密度和熵密度为<a href="#appendix_3">$^3$</a>：</p><script type="math/tex; mode=display">\begin{equation}n=g\int\frac{\text{d}^3\vec{p}}{(2\pi)^3}f(\vec{p}), \quad \rho=g\int\frac{\text{d}^3\vec{p}}{(2\pi)^3}f(\vec{p})E(\vec{p}), \quad s=\frac{\rho+P}{T}\end{equation}</script><p>由于暗物质是的非相对论性而且散射截面不是很大，所以整个退耦过程仍处在宇宙早期，而早期宇宙以辐射为主导，其物态方程为<a href="#appendix_4">$^4$</a> </p><script type="math/tex; mode=display">\begin{equation}\rho=3P\end{equation}</script><p>我们得到早期宇宙的主要物理参量</p><script type="math/tex; mode=display">\begin{equation}n=g_*\frac{\xi(3)}{\pi^2}T^3, \quad \rho=g_*(\frac{\pi^2}{30})T^4, \quad s=g_{*s}(\frac{2\pi^2}{45})T^3\end{equation}</script><p>其中$g_*,g_{*s}$称为有效零质量自由度（我们的推导中用到了零质量(相对论性)和零化学势的条件）<a href="#appendix_5">$^5$</a>：</p><script type="math/tex; mode=display">\begin{align}g_* = \sum_{i=\text{bosons}}g_i\Big(\frac{T_i}{T}\Big)^4 +\frac{7}{8}\sum_{i=\text{fermions}}g_i\Big(\frac{T_i}{T}\Big)^4 \\ g_{*s} = \sum_{i=\text{bosons}}g_i\Big(\frac{T_i}{T}\Big)^3 +\frac{7}{8}\sum_{i=\text{fermions}}g_i\Big(\frac{T_i}{T}\Big)^3\end{align}</script><p>考虑到相对论粒子为光子和三种中微子（都是两种自旋方式），$g_*=2+6\cdot\cfrac{7}{8}(\cfrac{T_\nu}{T_\gamma})^4$，$g_{*s}=2+6\cdot\cfrac{7}{8}(\cfrac{T_\nu}{T_\gamma})^3$，热平衡时有$T_\nu=T_\gamma$，因此$g_*=g_{*s}=7.25$。</p><p>随着宇宙能量密度降低，物质开始进入非相对论状态，引入变量$x=\cfrac{m_{\chi}}{T}$，在退耦时刻之后的WIMP平衡态数密度为(采用Maxwell-Boltzmann分布近似<a href="#appendix_6">$^6$</a>)：</p><script type="math/tex; mode=display">\begin{equation}n_\chi^0 = \int\frac{\text{d}^3\vec{p}}{(2\pi)}e^{-\frac{E}{T}} = e^{-\frac{m_\chi}{T}}\Big(\frac{m_\chi T}{2\pi}\Big)^{\frac{3}{2}} = e^{-x}\frac{m_\chi^3}{(2\pi x)^{\frac{3}{2}}}\end{equation}</script><p>可以发现，对于$\chi$粒子，当$T\ll m_\chi$时平衡态粒子数密度$n_\chi^0\sim T^3$；当$T\gg m_\chi$时平衡态粒子数密度$n_\chi^0\sim T^\frac{3}{2}e^{-\frac{m_\chi}{T}}$。平衡态时共动数密度(设WIMP$g_*=1$) </p><script type="math/tex; mode=display">\begin{equation}Y_\chi^0 = \frac{n_\chi^0}{s} = \frac{1}{g_*}\frac{45}{2\pi^2}\Big(\frac{x}{2\pi}\Big)^{\frac{3}{2}} \approx0.145x^{\frac{3}{2}}e^{-x}\end{equation}</script><p>考虑到熵守恒假设，并且将变元$(n_\chi,t)$转换为$(Y_\chi,x)$，前述Boltzmann方程化为<a href="#appendix_7">$^7$</a>) </p><script type="math/tex; mode=display">\begin{equation}\frac{\text{d}Y_\chi}{\text{d}x} = \frac{s}{xH}\langle\sigma_{ann}v\rangle[(Y^0_{\chi})^2 - (Y_{\chi})^2]\end{equation}</script><p>其中$s$、$H$与$x$的依赖关系为 </p><script type="math/tex; mode=display">\begin{equation}s = g_{*s}\frac{2\pi^2}{45}(\frac{m}{x})^3, \quad H = \sqrt{\frac{4\pi^3 Gg_*}{45}}(\frac{m}{x})^2\end{equation}</script><p>代入Boltzmann方程中，</p><script type="math/tex; mode=display">\begin{equation}\frac{\text{d}Y_\chi}{\text{d}x} = \Big(\frac{\pi}{45Gg_*}\Big)^{\frac{1}{2}}g_{*s}m\frac{1}{x^2}[(Y^0_{\chi})^2 - (Y_{\chi})^2]\end{equation}</script><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span id="ref_1">[1] H. Murayama, Physics beyond the standard model and dark matter, arXiv: <a href="https://arxiv.org/pdf/0704.2276.pdf" target="_blank" rel="noopener">0704.2276</a>.<br><span id="ref_2">[2] G. Arcadi <em>et al.</em>, The Waning of the WIMP? A review of models, searches, and constraints, arXiv: <a href="https://arxiv.org/pdf/1703.07364.pdf" target="_blank" rel="noopener">1703.07364</a></span></span></p><h2 id="附录（数学推导）"><a href="#附录（数学推导）" class="headerlink" title="附录（数学推导）"></a>附录（数学推导）</h2><p>本节推导中均采用自然单位制，即$\hbar=c=k_B=1$，这些物理符号依次为角普朗克常数、光速和Boltzmann常数。</p><ol><li><span id="appendix_1">只需要证明两个式子左边相等，导数展开即可。<script type="math/tex; mode=display">\begin{equation}\frac{1}{a^3}\frac{\text{d}(n_\chi a^3)}{\text{d}t} = \frac{1}{a^3}(\dot{n}_\chi a^3 + 3n_\chi a^2 \dot{a}) = \dot{n}_\chi + 3n_\chi \frac{\dot{a}}{a} = \frac{\text{d}n_\chi}{\text{d}t} + 3Hn_\chi\end{equation}</script>最后一步用到了Hubble常数的定义。</span></li><li><span id="appendix_2">假设宇宙在膨胀过程中总熵守恒，则粒子数密度$n$与熵密度$s$都在随膨胀而有一个$a^{-3}$因子的变化（一般称$a^3$为共动体积），因而它们的比值$Y = \cfrac{n}{s}$为常数，之所以说近似，是考虑到由于热运动而造成的局域密度变化。</span></li><li><span id="appendix_3">(1) 不确定关系给出粒子的坐标不确定度$\Delta{q}$与其共轭动量的不确定度满足关系$\Delta{q}\Delta{p}\approx h$。自由度为$1$ 的粒子的相格大小(由$q$、$p$描述的粒子运动状态，即相体积)为$\small{h}$。因此三维自由粒子（这里已经假设暗物质退耦阶段的早期宇宙空间是三维的）在相体积$V\text{d}p_x\text{d}p_y\text{d}p_z$中的量子态数为$\cfrac{V\text{d}p_x\text{d}p_y\text{d}p_z}{h^3}$，而数密度则为$\cfrac{\text{d}p_x\text{d}p_y\text{d}p_z}{h^3}$。（三维相格大小为$h^3$，并且由于物理规律在空间中的平移旋转不变性，$\int \text{d}q_x\text{d}q_y\text{d}q_z$直接积分得到坐标体积$V$）。在自然单位制之下$h=(2\pi\hbar=)2\pi$，于是我们得到了积分元$\cfrac{\text{d}^3\vec{p}}{(2\pi)^3}$。<br>(2) 注意到$\small{\rho}$就是能量密度，<script type="math/tex; mode=display">\begin{equation}s=\frac{S}{V}=\frac{1}{V}\int\frac{\text{d}U+P\text{d}V}{T}=\frac{1}{V}\int\frac{\rho \text{d}V+P\text{d}V}{T}=\frac{\rho+P}{T}\end{equation}</script></span></li><li><span id="appendix_4">（几乎是从第一性原理出发）分别计算$\rho$和$P$，对于辐射(光子气体)，服从Bose-Einstein分布，由于黑体不断辐射和吸收光子，光子数是不守恒的（也就是说能量$E$守恒但数目$N$不守恒，平衡态下光子的化学势为$0$）所以光子气体的统计分布为：<script type="math/tex; mode=display">\begin{equation}\Big(f(\vec{p})=\Big)f(\omega, T) = \frac{g_*}{e^{\beta\varepsilon_*}-1} = \frac{g_*}{e^{\frac{\omega}{T}}-1}\end{equation}</script>光子的自旋量子数为$1$，自旋在动量方向上可以取两种可能值$\pm\hbar$(相当于左右圆偏振)，即$g_*=2$，在体积$V$，动量$p$到$p+dp$范围内，光子量子态数目为 <script type="math/tex; mode=display">\begin{equation}\text{d}n_{q}(p) = \frac{4\pi V}{(2\pi)^3}p^2 \text{d}p = \frac{Vp^2}{2\pi^2}\text{d}p\end{equation}</script>而$\varepsilon=(cp=)p$且$\varepsilon=(\hbar\omega=)\omega$，即$\varepsilon=\omega=p$，平均光子数为 <script type="math/tex; mode=display">\begin{equation}\text{d}n(\omega, T) = f(\omega, T)\text{d}n_{q}(\omega) = \frac{V}{\pi^2}\frac{\omega^2\text{d}\omega}{e^{\frac{\omega}{T}}-1}\end{equation}</script>辐射场内部能量(<strong>Planck公式</strong>)为 <script type="math/tex; mode=display">\begin{equation}U(\omega, T)\text{d}\omega = \Big( \hbar\omega\cdot \text{d}n(\omega, T) = \frac{V}{\pi^2}\frac{\hbar\omega^3\text{d}\omega}{e^{\frac{\omega}{T}}-1} = \Big) \frac{V}{\pi^2}\frac{\omega^3\text{d}\omega}{e^{\frac{\omega}{T}}-1}\end{equation}</script>因此 <script type="math/tex; mode=display">\begin{align} & U = \int_0^\infty U(\omega, T)\text{d}\omega = \frac{VT^4}{\pi^2}\int_0^\infty\frac{x^3\text{d}x}{e^x-1} = \frac{\pi^2 }{15}VT^4 \\ & \rho(\omega, T) = \frac{U(\omega, T)}{V} = \frac{1}{\pi^2}\frac{\omega^3}{e^{\frac{\omega}{T}}-1}, \quad \rho = \frac{U}{V} = \frac{\pi^2}{15}T^4 \\ & n = \frac{1}{V}\int_0^\infty \text{d}n(\omega, T) = \frac{T^3}{\pi^2}\int_0^\infty \frac{x^2\text{d}x}{e^x-1} = \frac{2\xi(3)}{\pi^2}T^3\end{align}</script>以上，我们通过分析方法求得了辐射内能密度$\rho$，下面我们将通过系综的方法重新得到这一结果，并且得到压强$P$的表达式。光子气体的巨配分函数的对数为（引入变量$x=\cfrac{\omega}{T}$）：<script type="math/tex; mode=display">\begin{align}\ln{\Xi} &= -\frac{V}{8\pi^3}\int 2\ln{(1-e^{-\frac{\omega}{T}})}\text{d}^3\vec{\omega} \\ &= -\frac{V}{\pi^2}\int_0^{\infty}\omega^2\ln{(1-e^{-\frac{\omega}{T}})\text{d}\omega} \\ &= -\frac{VT^3}{\pi^2}\int_0^{\infty}x^2\ln{(1-e^{-x})}\text{d}x \\ &= \frac{\pi^2}{45}VT^3\end{align}</script>从而(这里$\beta=\cfrac{1}{T}$) <script type="math/tex; mode=display">\begin{align}\rho &= -\frac{1}{V}\frac{\partial}{\partial\beta}\ln{\Xi} = \frac{\pi^2}{15}T^4 \\ P &= - \frac{1}{\beta}\frac{\partial}{\partial V}\ln{\Xi} = \frac{\pi^2}{45}T^4\end{align}</script>比较以上两式立得 $\rho = 3P$。<br>$\Big[$推导过程中用到了如下积分事实：<script type="math/tex; mode=display">\begin{align}I(n) = \int_0^\infty\frac{x^n\text{d}x}{e^x-1} &= \sum_{i=1}^\infty\frac{1}{i^n}\int_0^\infty y^{n-1}e^{-y}\text{d}y = \zeta(n)\Gamma(n), \\ \therefore \quad I(3) &= \zeta(3)\Gamma(3) = \frac{\pi^4}{15} \\ -\int_0^{\infty}x^2\ln{(1-e^{-x})}\text{d}x &= -( [\frac{x^3}{3}\ln{(1-e^{-x})}]_0^{\infty} - \frac{1}{3}\int_0^\infty\frac{x^3\text{d}x}{e^x-1}) \\ &= \frac{1}{3}\int_0^\infty\frac{x^3\text{d}x}{e^x-1}=\frac{1}{3}I(3)=\frac{\pi^4}{45}\end{align}</script>$I(n) = \zeta(n)\Gamma(n)$是数学分析中的一个经典结果，其中$\zeta(z)$是Riemann $\zeta$函数。$\Big]$</span></li><li><span id="appendix_5">上面一条附录给出了零质量Boson的计算结果，这里将Fermion的情况一并总结出来（与Boson唯一的区别是将分布函数$f(\vec{p})$替换成Fermion的）：<script type="math/tex; mode=display">\begin{align}\text{For Boson: }\quad & n=g\frac{\xi(3)}{\pi^2}T^3, \quad \rho=g\frac{\pi^2}{30}T^4, \quad s=g\frac{2\pi^2}{45}T^3 \\ \text{For Fermion: }\quad & n=g\frac{3}{4}\frac{\xi(3)}{\pi^2}T^3, \quad \rho=g\frac{7}{8}\frac{\pi^2}{30}T^4, \quad s=g\frac{7}{8}\frac{2\pi^2}{45}T^3\end{align}</script></span></li><li><span id="appendix_6">(1) $E_\chi = \sqrt{m_\chi^2+p_\chi^2} \simeq m_\chi + \cfrac{\vec{p}_\chi^2}{m_\chi}$<br>(2) 如果不采取近似，那么（正号为Fermion，符号为Boson） <script type="math/tex; mode=display">\begin{equation}n_\chi^0 = \int\frac{\text{d}^3\vec{p}}{(2\pi)^3}f(\vec{p}) = \frac{4\pi g_*}{(2\pi)^3}\int_0^\infty \frac{p^2\text{d}p}{e^{\dfrac{E-\mu}{T}}\pm1} = \frac{g_*}{2\pi^2}\int_0^\infty \frac{p^2\text{d}p}{e^{\dfrac{\sqrt{m^2+p^2}-\mu}{T}}\pm1}\end{equation}</script>将是一个比较难处理的积分，好在这时的情况是非相对论的，可以采用Maxwell-Boltzmann分布。</span></li><li><span id="appendix_7">设物态方程具有形式$P=w\rho$，对于热物质(相对论性物质，如辐射<a href="#appendix_4">$^4$</a>)$w=\cfrac{1}{3}$。一方面，由<a href="https://www.jianshu.com/p/2d78574ac8f6" target="_blank" rel="noopener">Friedmann方程</a>导出式，<script type="math/tex; mode=display">\begin{equation}\dot{\rho} = -\frac{3\dot{a}}{a}(\rho+P) = -\frac{4\dot{a}}{a} \quad \Rightarrow \quad \rho \propto a^{-3(1+w)} = a^{-4}\end{equation}</script>另一方面，我们从黑体辐射公式又知道 <script type="math/tex; mode=display">\begin{equation}\rho = \frac{\pi^2}{45}T^4 \propto T^4\end{equation}</script>于是得到 <script type="math/tex; mode=display">\begin{equation}T\propto a^{-1}\end{equation}</script>还是回到Friedmann方程(这里使用第二方程)，既然我们说宇宙早期辐射主导(同时研究对象取为$\Lambda=0,k=0$的Einstein-de Sitter宇宙，反正辐射绝对主导)，那么能量密度$\rho = \rho_r + \rho_m \simeq \rho_r = \rho_{r0}(\cfrac{a_0}{a})^{4}$（事实上上面的推导我们已经采用这一近似，且$a_0=a(t_0)$，注意尽管$\rho\simeq\rho_r$但$\rho_0 = \rho_{r0} + \rho_{m0}$严格大于$\rho_{r0}$，这里的下角标“$_0$”统一表示现今宇宙的参数值），从而 <script type="math/tex; mode=display">\begin{align}&\Big(\frac{\dot{a}}{a}\Big)^{2} = \frac{8\pi G\rho}{3} = \frac{8\pi G\rho_{r0}}{3}\Big(\frac{a_0}{a}\Big)^{4} = \Omega_r H_0^2 a_0^4 a^{-4} \\ \Rightarrow\quad & |a\dot{a}| = \Omega_r^{\frac{1}{2}} H_0 a_0^2 \text{  or  } a\text{d}a = \Omega_r^{\frac{1}{2}} H_0 a_0^2\text{d}t \\ \Rightarrow\quad & a^2 \propto t \text{  or  } a \propto t^{\frac{1}{2}}\end{align}</script>其中$H_0$和$a_0$为现在的Hubble常数和尺度因子，$\Omega_r\equiv\cfrac{8\pi G\rho_{r0}}{3H_0^2}$为现在的辐射密度参数。终于，我们导出了早期宇宙(非暴胀时期)温度与时间的关系：<script type="math/tex; mode=display">\begin{equation}T \propto t^{-\frac{1}{2}} \quad \Big( t = \frac{1}{2\Omega_r^{1/2} H_0}\Big(\frac{T_0}{T}\Big)^{2} = \frac{1}{2H(T)} \Big)\end{equation}</script>上式最后一个等号是由于 <script type="math/tex; mode=display">\begin{equation}H^2=H^2(T) = \frac{8\pi G}{3}\rho \simeq \frac{8\pi G}{3}\rho_r = \frac{8\pi G}{3}\rho_{r0}\Big(\frac{T}{T_0}\Big)^4 = \Omega_r H_0^2 \Big(\frac{T}{T_0}\Big)^4\end{equation}</script>并且我们可以得到 <script type="math/tex; mode=display">\begin{equation}\frac{\text{d}t}{\text{d}x} = \frac{1}{m}\frac{\text{d}t}{\text{d}(T^{-1})} = \frac{1}{m}\frac{T_0^2}{\Omega_r^{1/2} H_0}\frac{1}{T} = \frac{1}{xH(T)}\end{equation}</script>这里$x=\cfrac{m}{T}$，把这个关系应用到我们需要的共动数密度导数上，<script type="math/tex; mode=display">\begin{equation}\frac{\text{d}Y_\chi}{\text{d}x} = \frac{\text{d}t}{\text{d}x}\frac{\text{d}Y_\chi}{\text{d}t} = \frac{1}{xH(T)}\cdot\frac{1}{s}\Big(\frac{\text{d}n_\chi}{\text{d}t} - Y_\chi\frac{\text{d}s}{\text{d}t}\Big)\end{equation}</script>这里括号中第一项将直接代入关于$n_\chi$的Boltzmann方程，第二项基于熵守恒 <script type="math/tex; mode=display">\begin{align} & 0 = \frac{\text{d}S}{\text{d}t} = \frac{\text{d}(sa^3)}{\text{d}t} = a^3\frac{\text{d}s}{\text{d}t}+ 3a^2s\frac{\text{d}a}{\text{d}t} \\ & \quad \Rightarrow \quad \frac{\text{d}s}{\text{d}t} + 3Hs = 0\end{align}</script>从而 <script type="math/tex; mode=display">\begin{align}\frac{\text{d}Y_\chi}{\text{d}x} &= \frac{1}{xHs}(-3Hn_\chi + \langle\sigma_{ann}v\rangle[(n^0_{\chi})^2 - (n_{\chi})^2] - Y_\chi(-3Hs)) \\ &= \frac{s}{xH}\langle\sigma_{ann}v\rangle[(Y^0_{\chi})^2 - (Y_{\chi})^2]\end{align}</script></span></li></ol><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=441617634&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      关于WIMP的理论模型推导
    
    </summary>
    
      <category term="academic" scheme="http://yoursite.com/categories/academic/"/>
    
    
      <category term="physics" scheme="http://yoursite.com/tags/physics/"/>
    
      <category term="particle physics" scheme="http://yoursite.com/tags/particle-physics/"/>
    
      <category term="theory" scheme="http://yoursite.com/tags/theory/"/>
    
      <category term="dark matter" scheme="http://yoursite.com/tags/dark-matter/"/>
    
  </entry>
  
</feed>
